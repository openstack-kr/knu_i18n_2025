[EN] **Dependency updates**: we've increased our minimum supported version of ``cryptography`` to 2.0.2 and ``netifaces`` to 0.8. This is largely due to the difficulty of continuing to test with the old versions.
[KO] **보안 업데이트**: 우리가 ``cryptography``의 최소 지원 버전을 2.0.2로 증가시키고 ``netifaces``를 0.8로 증가시켰다. 이것은 오래된 버전을 계속 테스트할 수 있는 것이 어렵기 때문에 주로 발생했다.

[EN] **If your cluster is configured with a separate replication network**, note that background daemons will switch to using this network for all traffic. If your account, container, or object replication servers are configured with ``replication_server = true``, these daemons may log a flood of ``405 Method Not Allowed`` messages during a rolling upgrade. To avoid this, comment out the option and restart replication servers before upgrading.
[KO] **클러스터**가 분리된 복제 네트워크로 구성되어 있다면 , 배경 데몬은 모든 트래픽을 이 네트워크를 사용하도록 전환할 것이다.  계정, 컨테이너 또는 오브젝트 복제 서버가 ``replication_server = true``로 구성되어 있다면 , 이러한 데몬은 롤링 업그레이드 시 ``405 Method Not Allowed`` 메시지를 로그할 수 있다. 이를 피하기 위해 옵션을 coment아웃하고 업그레이드를 준비할 때까지 복제 서버를 재시작해야 할 것이다.

[EN] 2 for invalid options
[KO] 2 for 무效 옵션

[EN] A 'compact' command has been added to ``swift-manage-shard-ranges`` that enables sequences of contiguous shards with low object counts to be compacted into another existing shard, or into the root container.
[KO]  compact 명령은 `swift-manage-shard-ranges`에서 공유를 사용하여 연속된 낮은 오브젝트 카운트가 있는 공유의 시퀀스를 다른 존재하는 공유 또는 루트 컨테이너에 고립화할 수 있습니다.

[EN] Account and container replicators can now be configured with a ``handoff_delete`` option, similar to object replicators and reconstructors. See the sample config for more information.
[KO] 계정과 컨테이너 복사자들은 `handoff_delete` 옵션으로 구성될 수 있으며 오브젝트 복사자와 재건자와 유사합니다. 더 많은 정보를 얻고 싶으려면 샘플 конф리그를 확인하세요.

[EN] Account quotas are now enforced even on empty accounts.
[KO] 계정 수용량은 이제 비어 있는 계정에도 강제적으로 적용됩니다.

[EN] Add Vary headers for CORS responses.
[KO] CORS 응답에 Vary 헤더를 추가하십시오.

[EN] Add basic read support for S3 object locking. This improves compatibility with an Ansible S3 module. Write support is not yet implemented, so get-object-lock-configuration will always 404.
[KO] 기본 cấu정에 새로운 기본값이 추가되었습니다.

[EN] Add checksum to object extended attributes.
[KO] 속성에 applies되었습니다.

[EN] Add fallocate_reserve to account and container servers. This allows disks shared between account/container and object rings to avoid getting 100% full. The default value of 1% matches the existing default on object servers.
[KO] 계속자에 새로운 기본값이 추가되었습니다.

[EN] Add support for PROXY protocol v1 to the proxy server. This allows the Swift proxy server to log accurate client IP addresses when there is a proxy or SSL-terminator between the client and the Swift proxy server.  Example servers supporting this PROXY protocol include stunnel, haproxy, hitch, and varnish. See the sample proxy server config file for the appropriate config setting to enable or disable this functionality.
[KO] 클라이언트의 기본값이 추가되었습니다.

[EN] Added ``-d <devs>`` and ``-p <partitions>`` command line options.
[KO] `-d <devs>` 및 `-p <partitions>` 명령줄 옵션을 추가했습니다.

[EN] Added a "user" option to the drive-audit config file. Its value is used to set the owner of the drive-audit recon cache.
[KO] 캐시를 사용하여 drive-audit recon 캐시의 소유자를 설정합니다.

[EN] Added a ``--dry-run`` option for the 'compact' command.
[KO] , --dry-run 옵션을 추가했습니다.

[EN] Added a ``--includes`` option for the 'show' command to only output shard ranges that may include a given object name.
[KO] 다음은 **very** 중요합니다.

[EN] Added a ``keep_cache_slo_manifest`` option to the object server to better control whether SLO manifests are dropped from the page cache.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Added a ``keepalive_timeout`` option to the proxy server to limit how long to wait for a client to initiate a request, separate from the general ``client_timeout`` option. Note that this requires eventlet 0.33.4 (currently unreleased) or later.
[KO] 클라이언트의 기본값이 추가되었습니다.

[EN] Added a ``log_rsync_transfers`` option to the object-replicator. Set it to false to disable logging rsync "send" lines; during large rebalances, such logging can overwhelm log aggregation while providing little useful information.
[KO] 오브젝트를 사용하여 로그 리스ин 트랜스퍼 옵션을 추가했습니다. 오브젝트-리플리카터에 로그 리스인 트랜스퍼 옵션을 추가했습니다. 이 옵션을 거부하면 로그 리스인 "보내기" 라인을 비활성화합니다. 큰 재배치 시, 이러한 로그 aggregates를 overwhelm할 수 있으며, 유용한 정보가 거의 제공되지 않습니다.

[EN] Added a ``swift-reload`` command to assist with safely reloading WSGI servers.
[KO] , 새로운 기본값이 추가되었습니다.

[EN] Added a configurable URL base to staticweb, fixing issues when the accessible endpoint isn't known to the Swift cluster (eg http vs https).
[KO] 새로운 기본값이 추가되었습니다.

[EN] Added a new 'analyze' command to automatically identify overlapping shard ranges and recommend a resolution based on a JSON listing of shard ranges such as produced by the 'show' command.
[KO] , 공유 명령을 추가했습니다. 자동으로 겹치지 않는 공유 범위의 상호 ảnh소를 식별하고, JSON 목록인 공유範囲의 목록과 같은 '시작' 명령에 의해 생성된 JSON 목록을 기반으로 해결책을 제안합니다.

[EN] Added a new 'repair' command to automatically identify and optionally resolve overlapping shard ranges.
[KO] , 공유를 추가하여 오버레이드 공유 범위의 일치 여부를 tự động 식별하고 선택적으로 해결합니다.

[EN] Added a new config option, ``minimum_shard_size``. When scanning for shard ranges, if the final shard would otherwise contain fewer than this many objects, the previous shard will instead be expanded to the end of the namespace (and so may contain up to ``rows_per_shard + minimum_shard_size`` objects). This reduces the number of small shards generated. The default value is ``rows_per_shard / 5``.
[KO] 다음은 네임 스페이스입니다.

[EN] Added a new object-expirer configuration option, ``round_robin_task_cache_size``, to adjust the number of tasks to cache before processing. This may be used to trade faster expirer start-up for more lumpy container-server load.
[KO] 캐시가 추가되었습니다.

[EN] Added a proxy-server configuration option: ``allow_open_expired``. This defaults to false; if true, clients may intereact with expired objects by including an ``X-Open-Expired: true`` header in GET, HEAD, or POST requests.
[KO] 클라이언트에 대한 프록시 서버 구성 옵션을 추가되었습니다: `allow_open_expired`. 이 기본값은 False로 설정되어 있습니다. True면 클라이언트는 만료된 오브젝트와 상호작용할 수 있습니다. 만약 GET, HEAD 또는 POST 요청에서 X-Open-Expired: true 헤더를 포함한다면.

[EN] Added information (including target account/container) from oldest failed updates to recon dumps, both per-device and aggregated for the node. Use the new ``async_tracker_max_entries`` and ``async_tracker_dump_count`` options to adjust how many records to collect.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Added metrics to the formpost and tempurl middlewares to monitor digest usage in signatures.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Added per-account and per-container reaping delays. These may be used to offer some grace period in which to recover expired objects.
[KO] 容器에 대한 추가한 사용자 및 컨เท이너의 수집 지연이 추가되었습니다. 이러한 지연은 만료된 오브젝트를 회복하기 위한 일부 유도 시기 제공을 위해 사용될 수 있습니다.

[EN] Added support for per-policy proxy config options. This allows per-policy affinity options to be set for use with duplicated EC policies and composite rings. Certain options found in per-policy conf sections will override their equivalents that may be set in the [app:proxy-server] section. Currently the options handled that way are ``sorting_method``, ``read_affinity``, ``write_affinity``, ``write_affinity_node_count``, and ``write_affinity_handoff_delete_count``.
[KO] 노드에 대한 기본값이 추가되었습니다.

[EN] Added the ability for reseller admins to set per-policy account quotas by posting metadata of the form ``X-Account-Quota-Bytes-Policy-<policy name>``.
[KO] 정책에 대한 리소스 할당량을 설정할 수 있는 리설러 관리자는 X-Account-Quota-Bytes-Policy- policy 이름으로의 메타데이터를 posting할 수 있습니다.

[EN] Added the ability to configure auth region in s3token middleware.
[KO]  region 에 대한 설정을 S3토큰 미들웨어에서 추가했습니다.

[EN] Added the ability to configure cooperative yielding when servicing GET responses, via the ``cooperative_period`` option. See the example config for more information.
[KO] GET 응답을 서비스하는 동안 협력적으로yield하는 것을 구성할 수 있습니다. `cooperative_period` 옵션을 사용하여. 예를 들어 더 많은 정보를 확인하십시오.

[EN] Added the ability to quarantine EC fragments that have no (or few) other fragments in the cluster. A new configuration option, ``quarantine_threshold``, in the reconstructor controls the point at the fragment will be quarantined; the default (0) will never quarantine. Only fragments older than ``quarantine_age`` (default: ``reclaim_age``) may be quarantined. Before quarantining, the reconstructor will attempt to fetch fragments from handoff nodes in addition to the usual primary nodes; a new ``request_node_count`` option (default ``2 * replicas``) limits the total number of nodes to contact.
[KO] 클러스터에있는 EC片가 다른片와 거의 none이 없는 경우 Quarantine를 추가합니다.

[EN] Added the option to tune down ETag validation in the object-server during full-object reads. By default, every full read will continue to have its ETag validated as bytes are streamed to the proxy-server. The ``etag_validate_pct`` option may be used to configure approximately what percentage of full-object reads should be validated; reducing this can improve performance when object-servers are CPU-constrained.
[KO] 오브젝트에 대한 전환은 오브젝트-서버 간의 전환을 도와줍니다. 기본적으로, 모든 전환은 bytes가 프록시-서버로 스트리밍되는 동안 ETag를 유효화합니다. `etag_validate_pct` 옵션을 사용하여 approximately what percentage of full-object reads가 유효화되어야 하는지 설정할 수 있습니다; 이 것을 줄이면 CPU-자원 부족한 경우에 object-servers의 성능을 개선할 수 있습니다.

[EN] Added timing metrics to the container sharder for various operations.
[KO] 容器에 대한 다양한 연산을 위한 공유 sharder에 timing métrics를 추가했습니다.

[EN] After upgrading, re-enable and restart the object-reconstructor.
[KO] 업그레이드를 통해 오브젝트-조립기를 재启하고, 다시 시작하세요.

[EN] All background daemons now use the replication network. This allows better isolation between external, client-facing traffic and internal, background traffic. Note that during a rolling upgrade, replication servers may respond with ``405 Method Not Allowed``. To avoid this, operators should remove the config option ``replication_server = true`` from their replication servers; this will allow them to handle all request methods before upgrading.
[KO] 클라이언트는 모든 배경 데몬이 अब 복제 네트워크를 사용합니다. 이것은 외부-facing 트래픽과 내부의 배경 트래픽 사이에 더 अच्छ한 분리화를 허용합니다. rolling 업그레이드 시, 복제 서버가 ``405 Method Not Allowed``를 trảす 경우가 있습니다. 이 문제를 피하기 위해, 운영자들은 자신의 replication服务器에서 config 옵션 ``replication_server = true``을 제거해야 합니다; 이것은 업그레이드를 시작할 때까지 모든 요청 메소드를 처리하는 데 도움이 됩니다.

[EN] Always set Swift processes to use UTC.
[KO] 總是設定 스위프트 프로세스使用 UTC.

[EN] Background corruption-detection improvements
[KO] 뒤景 내부 오류 감지 개선

[EN] Bug Fixes
[KO] 버그修复

[EN] Change the behavior of the EC reconstructor to perform a fragment rebuild to a handoff node when a primary peer responds with 507 to the REPLICATE request. This changes EC to match the existing behavior of replication when drives fail. After a rebalance of EC rings (potentially removing unmounted/failed devices), it's most IO efficient to run in handoffs_only mode to avoid unnecessary rebuilds.
[KO] 기기에 새로운 기본값이 추가되었습니다.

[EN] Composite rings can be used for explicit replica placement and "replicated EC" for global erasure codes policies.
[KO] 합성 ring을 사용하여 명시적인 복제 위치 설정과 "복사 EC"를 위한 toàn cầu 지운 코드 정책이 가능하다.

[EN] Constant-time string comparisons are now used when checking S3 API signatures.
[KO] 서명은 서명입니다.

[EN] Container sharding deprecations:
[KO] 컨테이너 공유 배치 비상대적 notice:

[EN] Correctly send 412 Precondition Failed if a user sends an invalid copy destination. Previously Swift would send a 500 Internal Server Error.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Correctness improvements
[KO] 정확도 개선

[EN] Critical Issues
[KO] 비상적인 문제

[EN] Cross-account symlinks now store correct account information in container listings. This was previously fixed in 2.22.0.
[KO] 容器에 대한 가로계정符식은 이제correct 계정 정보를 저장합니다. 이전에는 2.22.0에서 해결되었습니다.

[EN] Daemons using InternalClient can now be properly killed with SIGTERM.
[KO] daemon s는 internal client 을 사용하여 올바르게 sigterm 으로 죽일 수 있습니다.

[EN] Data encryption updates
[KO] 데이터 암호화 업데이트

[EN] Databases marked deleted are now processed by the sharder.
[KO] 데이터베이스가 삭제된 것으로 표시된 데이터는 현재 이시어화 처리자에 의해 처리됩니다.

[EN] Deleted shard containers are no longer considered root containers. This prevents unnecessary sharding audit failures and allows the deleted shard database to actually be unlinked.
[KO] 容器 : 컨테이너

[EN] Deprecation Notes
[KO] 사용 중인 버전에서 사용하지 않는 기능에 대한 주의 사항

[EN] Detect and remove invalid entries from ``hashes.pkl``
[KO] 사용 가능한 항목을 제거하기 위해 ``hashes.pkl``에서 비정상적인 항목을 감지하고 제거하십시오.

[EN] Developers using Swift's memcache client may now opt in to having a ``MemcacheConnectionError`` be raised when no connection succeeded using a new ``raise_on_error`` keyword argument to ``get``/``set``.
[KO] 사용자들이 Swift의 memcache 클라이언트를 사용하는 개발자는 이제 새로운 `raise_on_error` 키워드 인args를 사용하여 `get` 또는 `set` 메소드를 호출할 때 `MemcacheConnectionError`가 발생하지 않도록 할 수 있습니다.

[EN] Device names are now included in new database IDs. This provides more context when examining incoming/outgoing sync tables or sharding CleaveContexts.
[KO] 기기에 이름이 포함된ใหม한 데이터베이스 ID가 추가되었습니다. 이것은incoming/outgoing.sync tables 또는 공유 CleaveContexts를 확인할 때의 contexto가 더 많아집니다.

[EN] Display crypto data/metadata details in swift-object-info.
[KO] 오브젝트에 대한 암호화 데이터/메타데이터의รายละเอียด을 Swift-오브젝트-정보로 표시하십시오.

[EN] Don't inject shard ranges when user quits.
[KO] 이 Shard는 사용자가 종료할 때 Shard 범위를.inject하지 않습니다.

[EN] During rebalances, clients should no longer get 404s for data that exists but whose replicas are overloaded.
[KO] 클라이언트는 데이터가 존재하지만 복사본이 ओवर로드된 경우에 더 이상 404를 받지 않도록 재조정 시에.

[EN] EC Fragment Duplication - Foundational Global EC Cluster Support.
[KO] EC 프라그먼트 중복 - 기초적 глобัล EC 클러스터 지원.

[EN] Empty account and container partition directories are now cleaned up immediately after replication, rather than needing to wait for an additional replication cycle.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Ensure that non-durable data and .meta files are purged from handoffs after syncing.
[KO] non-durable 데이터와 .meta 파일을 핸드오프에서 싱크 후 지운다.

[EN] Errors encountered while validating static symlink targets no longer cause BadResponseLength errors in the proxy-server.
[KO] 서버에 대한 오류가 발생하지 않아xies는 더 이상 BadResponseLength 오류를 일으키지 않는다.

[EN] Errors when setting keys in memcached are now logged. This helps operators detect when shard ranges for caching have gotten too large to be stored, for example.
[KO] 캐시가 설정되면 오류가 발생하는 경우 로그에 기록되었습니다. 이것은 캐싱에 대한 분할 범위가 너무 크게 저장되지 않도록-detected합니다. 예를 들어.

[EN] Expiring object queue entries now include the size of the object to be expired in the ``swift_expirer_bytes`` parameter of the queue entry's content-type.
[KO] 기한이 만료되는 오브젝트 큐 엔트리에는 기한이 만료되면 오브젝트의 크기를 `swift_expirer_bytes` 매개변수에 포함됩니다.

[EN] Fewer backend requests are now required when account or container information is missing from memcache.
[KO] 뱅드라인은 메모리 캐시에서 계정 또는 컨테이너 정보가 없을 때 더 적게 요청하는 경우에 사용됩니다.

[EN] Fix SLO delete for accounts with non-ASCII names.
[KO] SLO를 삭제하려고 하는데, 비아스리트 이름이 아스키가 아닌 경우에 대해 계정들을 제거하십시오.

[EN] Fix a proxy-server error when retrieving erasure coded data when there are durable fragments but not enough to reconstruct.
[KO] 서버에 대한 프록시-서버 오류가 발생하여 지속적 데이터를 사용한 지저분화 코드의 수신을 시도할 때, 지속적 데이터를 재구성하기 위해 충분한 지저분된 데이터가 없을 때 fixed.

[EN] Fixed a bug in the EC reconstructor where an unsuccessful sync would cause extra disk I/O load on the remote server. Now the extra checking work is only requested if the sync request was successful.
[KO] 디스크에 대한 기본값이 추가되었습니다.

[EN] Fixed a bug where encryption would store the incorrect key metadata if the object name starts with a slash.
[KO] 기본값을 추가되었습니다. 

[EN] Fixed a cache invalidation issue related to GET and PUT requests to containers that would occasionally cause object PUTs to a container to 404 after the container had been successfully created.
[KO] 캐시를 비우는 문제가 existed지만 GET 및 PUT 요청을 컨테이너에 대해 종종 오브젝트를 컨테이너에 PUT하도록导致 404 에러가 발생했다.

[EN] Fixed a path-rewriting bug introduced in Python 3.7.14, 3.8.14, 3.9.14, and 3.10.6 that could cause some ``domain_remap`` requests to be routed to the wrong object.
[KO] 모든 도메인이 **매우** 중요합니다. 

[EN] Fixed a race condition in ssync that could lead to a loss of data durability (or even loss of data, for two-replica policies) when some object servers have outdated rings. Replication via rsync is likely still affected by a similar bug.
[KO] 오브젝트의 새로운 기본값이 추가되었습니다.

[EN] Fixed a server error in bucket listings when ``s3_acl`` is enabled and staticweb is configured for the container.
[KO] 容器에 대해 `s3_acl`가 활성화되며 `staticweb`이 구성된 경우 버킷 목록에서 서버 오류를แก้ไข했습니다.

[EN] Fixed a server error when deleting a specific version via the S3 API.
[KO] 서버 오류를 수정했습니다. 특정 버전을 S3 API를 통해 삭제할 때.

[EN] Fixed a server error when downloading multipart uploads/static large objects that have missing or inaccessible segments. This is a state that cannot arise in AWS, so a new ``BrokenMPU`` error is returned, indicating that retrying the request is unlikely to succeed.
[KO] 오브젝트를 다운로드하는multipart 업로드/정적 큰 오브젝트의 에러를修复했습니다. 이 상태는 AWS에서 발생할 수 없기 때문에 새로운 `BrokenMPU` 오류가 반환됩니다. 이것은 다시 요청을 성공시키는可能性가 거의 nonexistent합니다.

[EN] Fixed a server error when using non-ASCII access key IDs.
[KO] 기본값을 수정했습니다. 비아스 아스키 접근 키 ID를 사용할 때 에러가 발생했습니다.

[EN] Fixed an issue where S3 API v4 signatures would not be validated against the body of the request, allowing a replay attack if request headers were captured by a malicious third party.
[KO] S3 API v4 서명이 요청 본체와 일치하지 않으면 재생공격을 허용하는 문제를 해결했습니다.

[EN] Fixed an issue where deleted EC objects didn't have their on-disk directories cleaned up. This would cause extra resource usage on the object servers.
[KO] 디스크에 오브젝트가 삭제되면 디스크에 있는 디렉터리가 청소되지 않았기 때문에 오브젝트 서버에서 추가적인 자원 사용이 발생했습니다.

[EN] Fixed an issue where non-ASCII Keystone EC2 credentials would not get mapped to the correct account. This was previously fixed in 2.20.0.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Fixed an issue where non-base64 signatures would cause a server error. Swift now correctly responds with a client error about the invalid digest.
[KO] 클라이언트에서 비기너스 기반의 서명이 있으면 서버 오류가 발생했습니다. 스위프트는 이제 비기너스 기반의 서명이 유효하지 않다고 클라이언트 오류를 trả환합니다.

[EN] Fixed an issue where v4 signatures would not be validated against the body of the request, allowing a replay attack if request headers were captured by a malicious third party. Note that unsigned payloads still function normally.
[KO] 기본값이 추가되었습니다.

[EN] Fixed an issue with logging setup when /dev/log doesn't exist or is not a UNIX socket.
[KO] 로그 설정에 대한 문제를 수정했습니다. /dev/log가 존재하지 않거나 유니크스 소켓이 아닐 때.

[EN] Fixed cross-policy object copies. Previously, copied data would always be written using the source container's policy. Now, the destination container's policy will be used, avoiding availability issues and unnecessary container-reconciler work.
[KO] 컨테이너에 새로운 기본값이 추가되었습니다.

[EN] Fixed deadlock when logging from a tpool thread. The object server runs certain IO-intensive methods outside the main pthread for performance. Previously, if one of those methods tried to log, this can cause a crash that eventually leads to an object server with hundreds or thousands of greenthreads, all deadlocked. The fix is to use a mutex that works across different greenlets and different pthreads.
[KO] 오브젝트 풀에서 로그를 사용할 때_deadlock이 발생했습니다. 오브젝트 서버는 성능을 위해 메인 스레드 fuera에 IO-중요한 메서드를 실행합니다. 이전에, 그 중 하나가 로그를 시도 할 때, 이것은 eventually greenthread hundreds 또는 thousands의 오브젝트服务器에Deadlock으로 이어집니다. fix는 mutex가 다른 greenlet과 pthreads 사이에서 작동하는 것을 사용하여 해결됩니다.

[EN] Fixed error where a container drive error resulted in double space usage on rest drives. When drive with container or account database is unmounted, the bug would create handoff replicas on all remaining drives, increasing the drive space used and filling the cluster.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Fixed listings for sharded containers.
[KO] 공유 컨테이너의 fixed 목록.

[EN] Fixed regression in consolidate_hashes that occured when a new file was stored to new suffix to a non-empty partition. This bug was introduced in 2.7.0 and could cause an increase in rsync replication stats during and after upgrade, due to inconsistent hashing of partition suffixes.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Fixed regression in consolidate_hashes that occurred when a new file was stored to new suffix to a non-empty partition. This bug was introduced in 2.7.0 and could cause an increase in rsync replication stats during and after upgrade, due to inconsistent hashing of partition suffixes.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Fixed s3v4 signature calculation when the client sends an un-encoded path in the request.
[KO] 클라이언트가 요청에 비어있는 경로를 전송할 때, 서명 계산을 fixed합니다.

[EN] Fixed several issues with the prefix, marker, and delimiter parameters that would be mirrored back to clients when listing buckets.
[KO] 고객은 **클라이언트**를 사용하여_bucket을 목록화할 때는 prefix, marker 및 delimiter parameter가 반영됩니다.

[EN] Fixed some SignatureDoesNotMatch errors when using the AWS .NET SDK.
[KO] 사인서가 올바르지 않습니다. AWS .NET SDK를 사용할 때는 서명 오류가 발생했습니다.

[EN] Fixed ssync's handling of timestamp offsets. Previously, this could cause ssync to fail with a 409 Conflict, causing the transfer to fail and preventing handoffs from clearing.
[KO] 이 기본값을 사용하면 ssync의 타임스탬프 오프셋 처리가 변경되었습니다. 이전에 이로 인해 ssync는 409 충돌 에러로 실패할 수 있었으며 이로 인해 전송이 thất bại하고 하드오프에서 클리어링이 제대로 작동하지 않게 됩니다.

[EN] Fixed the KeyError message when auditor finds an expired object.
[KO] 이 오브젝트는 만료된 오브젝트를 찾았습니다.

[EN] For new multipart-uploads via the S3 API, the ETag that is stored will be calculated in the same way that AWS uses. This ETag will be used in GET/HEAD responses, bucket listings, and conditional requests via the S3 API. Accessing the same object via the Swift API will use the SLO Etag; however, in JSON container listings the multipart upload etag will be exposed in a new "s3_etag" key. Previously, some S3 clients would complain about download corruption when the ETag did not have a '-'.
[KO] ใหม한multipart-uploads를 통해 S3 API를 사용할 때, 저장된 ETag는 AWS가 사용하는 방법과 동일하게 계산됩니다. 이 ETag는 GET/HEAD응답, 버킷 목록, S3 API의 조건부 요청에 사용됩니다. Swift API를 통해相同 오브젝트를 접근하면 SLO ETag를 사용합니다. 그러나 JSON 컨테이너 목록에서 multipart upload ETag는 새로운 "s3_etag" 키에 노출됩니다. 이전에 일부 S3 클라이언트에서는 ETag가 '-'를 갖지 않는 경우 다운로드의 손상에 대한 문제를抱었습니다.

[EN] Getting an SLO manifest with ``?format=raw`` now responds with an ETag that matches the MD5 of the generated body rather than the MD5 of the manifest stored on disk.
[KO] GETting an SLO manifest with ``?format=raw`` 이제 디스크에 저장된 매니페스트의 MD5와 일치하는 ETag이 대신 생성된 바디의 MD5와 일치합니다.

[EN] If proxy and object layers can be upgraded independently and proxies can be upgraded quickly:
[KO] if 오브젝트 및 프록시 레이어가 독립적으로 업그레이드할 수 있으며 프록시는 빠르게 업그레이드될 수 있다:

[EN] If running Swift under Python 3, ``eventlet`` must be at least 0.25.0.
[KO] 파이썬 3에서 스위프트를 실행하려면 `eventlet`는 최소 0.25.0 이다.

[EN] If upgrading from Swift 2.20.0 or Swift 2.19.1 or earlier, set ``meta_version_to_write = 1`` in your keymaster configuration *prior* to upgrading.
[KO] 이 경우는 다음을 사용합니다.

[EN] If you want updates to be processed exactly as before, do this::
[KO] 如果 आप 이전과 같이 업데이트를 처리하고 싶다면 다음을 시도하세요::.

[EN] If you've been testing Swift on Python 3, upgrade at your earliest convenience.
[KO] Swift를 Python 3에서 테스트하고 있으면 가능한 한 sớm에 업그레이드하세요.

[EN] Improved S3 API compatibility.
[KO] S3 API의 보완된 호환성.

[EN] Improved ``object-updater`` stats logging. It now tells you all of its stats (successes, failures, quarantines due to bad pickles, unlinks, and errors), and it tells you incremental progress every five minutes. The logging at the end of a pass remains and has been expanded to also include all stats.
[KO] 오브젝트 업데이터의 성능 로그를 개선했습니다. 이제 successes, failures, quarantines due to bad pickles, unlinks, 및 errors와 같은 모든.stat을 보여줍니다. 또한, 5분마다 incremental progress를 알려줍니다. 마지막으로, pass가 끝날 때까지 로그가 유지되며, 더 많은 stat을 포함합니다.

[EN] Improved cache management for account and container responses.
[KO] 캐시 관리를 개선하여 계정 및 컨테이너 응답에 대한 cải thiện.

[EN] Improved container-sharder stat reporting to reduce load on root container databases.
[KO] 이미prove된 컨테이너-공유자 통계 báo cáo를 통해 루트 컨테이너 데이터베이스에 부하를 줄이기 위해.

[EN] Improved proxy-server performance by reducing unnecessary locking, memory copies, and eventlet scheduling.
[KO] 이미 프로ksi-서버 성능을 개선하여 불필요한锁定, 메모리 복사 및 이벤트 letcheduling 을 줄였다.

[EN] Improved proxy-to-backend requests to be more RFC-compliant.
[KO] 뒤면에 대한 요청을 개선하여 RFC-준수성에 더 잘 맞게했습니다.

[EN] Improved the granularity of the ring dispersion metric so that small improvements after a rebalance can show changes in the dispersion number. Dispersion in existing and new rings can be recalculated using the new ``--recalculate`` option to ``swift-ring-builder``.
[KO] ring의 산란度 매트릭스 그granularity를 개선하여 재조정 후에 작은 개선이 산란수치에 영향을 미치는지 확인할 수 있습니다. -existing 및 new ring의 산란도를 새로운 ``--recalculate`` 옵션을 사용하여 다시 계산할 수 있습니다.  ``swift-ring-builder``.

[EN] In SLO manifests, the `etag` and `size_bytes` keys are now fully optional and not required. Previously, the keys needed to exist but the values were optional. The only required key is `path`.
[KO] SLO manifest의 경우, `etag` 및 `size_bytes` 키는 모든 경우에 필수적이지 않아 반드시 존재해야 할 필요가 없습니다. 이전에는 키가 존재해야 하지만, 값은 선택적으로 존재할 수 있습니다. 만약 `path` 키만 존재하고 값이 존재하면 SLO manifest가 유효합니다.

[EN] Include object sysmeta in POST responses. Sysmeta is still stripped from the response before being sent to the client, but this allows middleware to make use of the information.
[KO] 클라이언트에 대해 새로운 기본값이 추가되었습니다.

[EN] Internal clients now correctly use their configured ``User-Agent`` in backend requests, rather than only using it for logging.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Known Issues
[KO]  알려진 문제들

[EN] Let clients request heartbeats during COPYs by including the query parameter ``heartbeat=on``.
[KO] 고객들은 COPY를 수행할 때, 매개 변수 `heartbeat=on`을 포함하여 심박수 요청을 받을 수 있습니다.

[EN] Let clients request heartbeats during SLO PUTs by including the query parameter ``heartbeat=on``.
[KO] 고객이 SLO PUT에 대한 심박수를 요청하도록 클라이언트는 매개 변수 "heartbeat=on"을 포함하여 запрос을 보내야 합니다.

[EN] Lock timeouts in the container updater are now logged at INFO level, not ERROR.
[KO] 컨테이너 업데이터에서 लॉक 타임아웃은 jetzt INFO 수준에 로그됩니다, ไม่ใช่ 오류 수준.

[EN] Log the correct request type of a subrequest downstream of copy.
[KO] 사ブ요청의 복사 후 아래로 써야 할 적절한 요청 타입을 로그하세요.

[EN] Logging improvements
[KO] 로깅 개선

[EN] Metrics are now emitted for a variety of S3 error responses, in the form ``s3api.<status_int>.<error_class>[.<reason>]``
[KO] 메트릭은 다양한 S3 오류 응답에 대해 agora로 발신됩니다. 형식은 `s3api.<상태_인터ี.오류_클래스>[.사유]`.

[EN] Metrics are now emitted for whether databases used for cleaving were created or already existed, allowing a better understanding of the reason for handoffs in the cluster.
[KO] 이러한 규칙을 적용하면 다음과 같습니다.

[EN] Metrics improvements:
[KO] 메트릭스 개선:

[EN] Middleware features:
[KO] 미들웨어 기능:

[EN] More headers are now copied from multi-part upload markers to their completed objects, including ``Content-Encoding``.
[KO] 새로운 기본값이 추가되었습니다.

[EN] Moved other-requirements.txt to bindep.txt. bindep.txt lists non-python dependencies of Swift.
[KO] Swift의 다른 요구 사항을 포함하는 다른 requirements.txt 파일을 bindep.txt로 이동했습니다. bindep.txt는 Swift의 비-Python 의존성 목록을 제공합니다.

[EN] New Features
[KO] 새 기능

[EN] New buckets created via the S3 API will now store multi-part upload data in the same storage policy as other data rather than the cluster's default storage policy.
[KO] 새로운 클러스터가 생성된 후 S3 API를 통해 새로운 버킷이 만들어지면, 멀티 파트 업로드 데이터는 다른 데이터와 마찬가지로 스토리지 정책과 함께 저장됩니다. 대신 이전에 사용한 클러스터 기본 스토리지 정책과는 달리.

[EN] Note that ``secret_id`` values must remain unique across all keymasters in a given pipeline. If they are not unique, the right-most keymaster will take precedence.
[KO] ` secret_id ` 가 같은 ` 키 ` master 에서 uniqueness 이 유지되지 않으면 오른쪽most ` 키 ` master 가 우선적으로 사용됩니다.

[EN] Note: if you have a custom middleware that makes account or container listings, it will only receive listings in JSON format.
[KO] 이 경우에는 JSON 형식으로만 목록을 받게 됩니다.

[EN] Now Swift will use ``write_affinity_handoff_delete_count`` to define how many local handoff nodes should swift send request to get more candidates for the final response. The default value "auto" means Swift will calculate the number automatically based on the number of replicas and current cluster topology.
[KO] 스위프가 now `write_affinity_handoff_delete_count`를 사용하여 로컬 핸드오버 노드의 수를 결정할 때, 더 많은 후보자들을 얻기 위해 스위프가 요청을 보낼지 여부를 정하는 방법을 정합니다. 기본값은 "auto"로, 스위프는.replicas의 수와 현재 클러스터 topology에 따라自动적으로 계산됩니다.

[EN] Object expiration fixes:
[KO] 오브젝트 만료fixes:

[EN] Object expiration improvements:
[KO] 오브젝트 만료 개선: 

[EN] Object expiry improvements
[KO] 오브젝트 만료 개선

[EN] Object server fixes:
[KO] 오브젝트 서버修复

[EN] Object updater observability improvements:
[KO] 오브젝트 업데이트어 obsverability 개선:

[EN] Object writes to a container whose existence cannot be verified now 503 instead of 404.
[KO] 오브젝트는 현재 503 오류를 반환하는 대신 404 오류가 returned 되지 않는 컨테이너의 존재가 확인되지 않기 때문에 컨테이너에 쓰여져 있습니다.

[EN] Objects with an ``X-Delete-At`` value in the far future no longer cause backend server errors.
[KO] Objects에far future의 `X-Delete-At`값이있는 경우 백엔드 서버 오류를 일으키지 않습니다.

[EN] On Python 3, the KMS keymaster now works with secrets stored in Barbican with a ``text/plain`` payload-content-type.
[KO] Python 3에서 KMS 키แม스터는 바비칸에 저장된 비밀을 포함하는 ``text/plain`` 패키지와 함께 작동합니다.

[EN] On newer kernels (3.15+ when using xfs), Swift will use the O_TMPFILE flag when opening a file instead of creating a temporary file and renaming it on commit. This makes the data path simpler and allows the filesystem to more efficiently optimize the files on disk, resulting in better performance.
[KO]  newer 커널(3.15+를 사용할 때 xfs와 함께)에서 스위프트는 파일을 열기 위해 O_TMPFILE 플래그를 사용합니다. 대신에 임시 파일을 생성하고 커ミ트时 이름 바꾸기 대신에 파일을 열습니다. 이것은 데이터 경로가 더 đơn순하고 파일 시스템이 더 효율적으로 파일을 최적화할 수 있게 해서 성능이 개선됩니다. 디스크

[EN] Optimized the common case for hashing filesystem trees, thus eliminating a lot of extraneous disk I/O.
[KO] 하드盘을 제거하여 많은 비용이 들지 않는 해싱 파일 시스템 트리에서 최적화된 경우를 사용했습니다.

[EN] Ordinary objects in S3 use the MD5 of the object as the ETag, just like Swift. Multipart Uploads follow a different format, notably including a dash followed by the number of segments. To that end (and for S3 API requests *only*), SLO responses via the S3 API have a literal '-N' added on the end of the ETag.
[KO] 오브젝트는 스위프트와 마찬가지로 오브젝트의 MD5를 ETag로 사용합니다. multipart 업로드는 특이한 형식으로, 숫자로 구분된 dashes가 포함됩니다. 이에 따라 (S3 API 요청만을 고려할 때) SLO 응답은 ETag의 끝에 '-N'을 literal하게 추가합니다.

[EN] Other Notes
[KO] 다른 노트

[EN] Partial reads continue to never have their ETag validated in the object-server. The object-auditor continues to periodically validate every object's ETag.
[KO]  partial reads는 항상 partial reads의 ETag을 유효화하지 않습니다. 오브젝트-auditor는 매기적으로 모든 오브젝트의 ETag을 유효화합니다.

[EN] Partition power increase fixes:
[KO] 파티션 파워 증가修复:

[EN] Partition power increase improvements:
[KO] 분할 शक력을 증가시키는 개선 사항:

[EN] Prefix-based tempurls may now be used to explore staticweb listings within that prefix. Note that this opens a new ability to list containers from tempurls, but only if staticweb's ``X-Container-Meta-Web-Listings`` is enabled.
[KO] 컨테이너는 ' 컨테이너 '로 번역됩니다.

[EN] Prevent logged traceback in object-server on client disconnect for chunked transfers to replicated policies.
[KO] 클라이언트에서 복제된 정책에 대한 분할 전송을 위해, 오브젝트-서버 đối면에서 클라이언트가 연결을 끊어졌을 때, 로그ged 트레이스백을 방지해야 합니다.

[EN] Prevent resets of a shard range's epoch.
[KO] 공유의 분할을 재설정하지 않도록 하십시오.

[EN] Previously, when deleting objects in multi-region swift deployment with write affinity configured, users always get 404 when deleting object before it's replicated to appropriate nodes.
[KO]  previously , when deleting 오브젝트 in multi-지역 Swift 배포에서 쓰기 상호 연결 설정이 구성된 경우 사용자는 오브젝트가 적합한 노드에 복제되기 전에 삭제할 때 always 404를 받았습니다 .

[EN] Proxy server fixes:
[KO] прок्सи 서버 고정

[EN] Proxy-server fixes:
[KO] 서버 

[EN] Python 3 bug fixes:
[KO] 파이썬 3 버전의 오류修复:

[EN] Python 3.6 and 3.7 are now fully supported. If you've been testing Swift on Python 3, upgrade at your earliest convenience.
[KO] 파이썬 3.6 및 3.7은 현재完全 지원됩니다. 파이썬 3에 스위프트를 테스트하고 있으시다면, 가능한早게 업그레이드해 주세요.

[EN] Reduced object-replicator and object-reconstructor CPU usage by only checking that the device list is current when rings change.
[KO] 장치를 사용하여 only 장치 목록이 현재인지 확인하는 것만을 확인하는.reduce object-replicator 및 object-reconstructor CPU 사용量을 줄였습니다.

[EN] Region name config option is now respected when configuring S3 credential caching.
[KO]  region 이름 설정 옵션은 이제 S3 자격 증명 캐싱을 구성할 때 지역 이름이 존중됩니다.

[EN] Rehash partitions during the partition power increase. Previously, we relied on the replication engine to perform the rehash, which could cause an unexpected I/O spike after a partition power increase.
[KO] partition power 증가 시 복제 엔진을 통해 재해싱을 수행하도록 depended했습니다. 그러나 이러한 경우에 I/O 스피크가 partitions power 증가 후에 비정상적으로 발생할 수 있습니다. 따라서, partitions powerincrease시 replicationengine를 사용하여rehash를 수행해야합니다.

[EN] Replaced ``replication_one_per_device`` by custom count defined by ``replication_concurrency_per_device``. The original config value is deprecated, but continues to function for now. If both values are defined, the old ``replication_one_per_device`` is ignored.
[KO] 이 장치에 대한 복제는 :class:`int` 타입의 `replication_concurrency_per_device`를 사용하여 계산됩니다. 원래의 `replication_one_per_device` 값은 더 이상 사용되지 않지만 현재는 기능을 유지합니다. 두 값 모두 정의되면, 오래된 `replication_one_per_device` 값이 무시됩니다.

[EN] Replication fixes:
[KO] 복제修复:

[EN] Replication improvements:
[KO] 복제 개선

[EN] Respect server type for --md5 check in swift-recon.
[KO] 서버의 유형을 고려하여 --md5 확인을 Swift-Recon에서 사용하십시오.

[EN] Respond 400 Bad Request when Accept headers fail to parse instead of returning 406 Not Acceptable.
[KO] 사용자-agent가 Accept 헤더를 파악할 수 없을 때, 400 Bad Request 상태 코드를 trả return 406 Not Acceptable 상태 코드 대신 사용하십시오.

[EN] S3 API fixes:
[KO] S3 API 수정:

[EN] SHA-1 signatures are now deprecated for the formpost and tempurl middlewares. At some point in the future, SHA-1 will no longer be enabled by default; eventually, support for it will be removed entirely.
[KO] 기호는 기호입니다.

[EN] SLO manifest PUT requests can now be properly validated by sending an ETag header of the md5 sum of the concatenated md5 sums of the referenced segments.
[KO] SLO manifests의 PUT 요청은 이제 참조된 구절의 MD5 합을 연결하여 MD5 합의 MD5 합을 concatenate 한 MD5의sum의 MD5과 일치하는 ETag 헤더를 보내면 올바르게 유효화할 수 있습니다.

[EN] SLO will now concurrently HEAD segments, resulting in much faster manifest validation and object creation. By default, two HEAD requests will be done at a time, but this can be changed by the operator via the new `concurrency` setting in the "[filter:slo]" section of the proxy server config.
[KO] SLO가 now concurrently HEAD 구간을 적용할 것이고,これにより manifest 유효성 확인과 오브젝트 생성이 매우 빠르게 진행될 것입니다. 기본적으로 두 개의 HEAD 요청이 동시에 처리되지만, 이를 변경하기 위해서는 운영자가 new `concurrency` 설정을 proxy server config의 "[filter:slo]" section에서 사용할 수 있습니다.

[EN] Save the ring when dispersion improves, even if balance doesn't improve.
[KO] 사용자 이름을 입력해 주십시오. 

[EN] Security Issues
[KO] 보안 문제

[EN] Send ETag header in 206 Partial Content responses to SLO reads.
[KO] ETag 헤더를 206 부분 nội dung 응답에서 SLO 읽기에 applies합니다.

[EN] Server-side copying of erasure-coded data to a replicated policy no longer copies EC sysmeta. The previous behavior had no material effect, but could confuse operators examining data on disk.
[KO] 서버-사이드 복제로 오류 코드 데이터를 디스크에 복사하는 것은 더 이상 EC sysmeta를 복사하지 않는다. 이전의 행동은 물리적 효과가 없지만 데이터를 디스크에서ตรวจสอบ하는 운영자에게 혼란을 줄 수 있었다.

[EN] Sharding fixes
[KO] 공유화修复

[EN] Sharding improvements
[KO] 공유 개선

[EN] Sharding improvements:
[KO] 공유 개선 

[EN] Sharding metadata is no longer cleared when databases are deleted. This could previously cause deleted shards that still had rows to become stuck and never move them to the correct database.
[KO] 공유 메타데이터는 데이터베이스를 삭제할 때 더 이상 청소되지 않는다. 이것은 이전에 삭제된 공유가 여전히 레코드를 가지고 있으면 삭제된 공유가 정상 데이터베이스로 이동하지 못하는 문제를 일으킬 수 있다.

[EN] Shards no longer report stats to the root database when they are in the ``CREATED`` state.
[KO] 공유가 더 이상 루트 데이터베이스에.stats를 보고하지 않게 된 이유는 그들이 `CREATED` 상태일 때이다.

[EN] Shuffle object-updater work. This somewhat reduces the impact a single overloaded database has on other containers' listings.
[KO]  컨테이너에 대한 새로운 기본값이 추가되었습니다.

[EN] Similar to above, ``expansion_limit`` was added as an absolute-size replacement for the now-deprecated ``shard_shrink_merge_point`` configuration option.
[KO] 구성에서 공유는 **very** 중요합니다. 

[EN] Ssync no longer corrupts unencrypted non-ASCII metadata during transfers.
[KO] SSync는 더 이상 암호화되지 않은 비아스리트 메타데이터를 전송 시에 오류를 일으키지 않습니다.

[EN] Static large object fixes:
[KO] 정적 large 오브젝트 fix

[EN] Suppress unexpected-file warnings for rsync temp files.
[KO] rsync temp 파일에 대한 예상치 못한 파일 경고를 억제하십시오.

[EN] Suppressed the KeyError message when auditor finds an expired object.
[KO] Expired 오브젝트가 발견된 경우 Auditor는 KeyError 메시지를抑制합니다.

[EN] Swift can now cache the S3 secret from Keystone to use for subsequent requests. This functionality is disabled by default but can be enabled by setting the ``secret_cache_duration`` in the ``[filter:s3token]`` section of the proxy server config to a number greater than 0.
[KO] 스위프가 현재 캐시된 S3 secret를 Keyston 에서 사용하기 위해 다음 요청에 사용할 수 있습니다. 이 기능은 기본적으로 비활성화되어 있지만, ``secret_cache_duration``을 ``[filter:s3token]``-section의 프록시 서버 구성에서 0보다 큰 숫자로 설정하면 활성화됩니다.

[EN] Symlink objects reference one other object. They are created by creating an empty object with an X-Symlink-Target header. The value of the header is of the format <container>/<object>, and the target does not need to exist at the time of symlink creation. Cross-account symlinks can be created by including the X-Symlink-Target-Account header.
[KO] 시리ंक은 오브젝트가 다른 오브젝트를 참조한다.它们는 비어 있는 오브젝트를 만드는 것을 통해 생성된다. 이때의 헤더는 <컨테이너>/<오브젝트> 형식으로 사용되며, target는 symlink creation 시에 존재해야 할 필요가 없다. cross-account symlinks는 X-Symlink-Target-Account 헤더를 포함하여 생성할 수 있다.

[EN] TempURLs now support a validation against a common prefix. A prefix-based signature grants access to all objects which share the same prefix. This avoids the creation of a large amount of signatures, when a whole container or pseudofolder is shared.
[KO] `컨테이너`에 대한 new default가 추가되었습니다.

[EN] The 'compact' command now outputs the total number of compactible sequences.
[KO]  compact 명령은 현재 총 수용 가능한 시퀀스의 수를 출력합니다.

[EN] The EC reconstructor will now attempt to remove empty directories immediately, while the inodes are still cached, rather than waiting until the next run.
[KO] EC reconstructor가 이제 캐시가 있는 inode까지가 있으면 비어있는 디렉토리를 즉시 제거하려고 시도합니다, 대신 다음 실행을 기다리지 anymore.

[EN] The ETag-quoting middleware no longer raises TypeErrors.
[KO] ETag-구체화 미들웨어는 더 이상 TypeErrors를 발생시키지 않습니다.

[EN] The S3 ACL and Delete Multiple APIs are now less case-sensitive.
[KO] S3 ACL 및 Delete Multiple API는 현재 소문자에 대한 민감도가 줄어든다.

[EN] The S3 API middleware now supports the ``?partNumber=<N>`` query parameter, enabling parallel downloads.
[KO] S3 API 미들웨어는 현재 ``?partNumber=<N>`` 매개 변수를 지원합니다. 이로 인해 병렬 다운로드가 가능합니다.

[EN] The S3 API no longer requires a ``Content-MD5`` header for ``DeleteObjects`` requests when using v4 signatures.
[KO] S3 API는 더 이상 `Content-MD5` 헤더를 포함하지 않고 `v4` 서명을 사용하는 경우 `DeleteObjects` 요청에 대한 요구 사항이 제거되었습니다.

[EN] The ``cooperative_period`` option for the object-server now affects PUT requests in a way similar to GET responses.
[KO] 오브젝트의 cooperative_period 옵션은 현재 GET 응답과 유사하게 PUT 요청에 영향을 미치게되었습니다.

[EN] The ``proxy-server`` now caches 'updating' shards, improving write performance for sharded containers. A new config option, ``recheck_updating_shard_ranges``, controls the cache time; set it to 0 to disable caching.
[KO] 캐시가 `업데이트` 공유를 캐싱하여 프로ksi-서버가 쓰기 성능을 개선합니다. 새로운 설정 옵션, `recheck_updating_shard_ranges`,는 캐시 시간을 제어합니다; 0으로 설정하면 캐싱을 비활성화합니다.

[EN] The ``proxy-server`` now ignores 404 responses from handoffs without databases when deciding on the correct response for account and container requests.
[KO] ``CONTAINER``는 데이터베이스가 없는 핸드오프에서 404 응답을 무시하고 계정과 컨테이너 요청의 적절한응답을 결정하는 데 사용됩니다.

[EN] The backend ratelimiter now supports dynamic reloading of limits. The new configuration options ``backend_ratelimit_conf_path`` and ``config_reload_interval`` control which file is reloaded and how frequently, respectively.
[KO] 백엔드는 현재 동적 로드 기능을 지원합니다. 새로운 구성 옵션 `backend_ratelimit_conf_path`와 `config_reload_interval`는 어떤 파일이 reloaded 될 수 있는지 및 얼마나 자주 reloaded 될 수 있는지를 제어합니다.

[EN] The container-reconciler now scales out better with new ``processes``, ``process``, and ``concurrency`` options, similar to the object-expirer.
[KO] 새로운 기본값이 추가되었습니다.

[EN] The container-updater now reports zero objects and bytes used for child DBs in sharded containers. This prevents double-counting in utilization reports.
[KO] 컨테이너 업데이터는 자식 DB를 사용하는 공유 컨테이너에서 нул object와 byte가 사용된 것을 보고 있습니다. 이것은 사용성 báo cáo의 중복 카운팅을 방지합니다.

[EN] The correct storage policy is now logged for S3 requests.
[KO] 정책은 S3 요청에 대해 이제 로그가 추가되었습니다.

[EN] The dark-data audit watcher now requires that all primary locations for an object's container agree that the data does not appear in listings to consider data "dark". Previously, a network partition that left an object node isolated could cause it to quarantine or delete all of its data.
[KO] 컨테이너에 대한 오브젝트의 chính적 위치에서 모든 곳이 데이터가 목록에 나타나지 않는다는 것을 동의하면 데이터를 " darken"라고 간주한다. 이전에는 네트워크 분할이 오브젝트 노드를 분리시킬 때, 모든 데이터를 Quarantine 또는 삭제하는 경우가 있었다.

[EN] The dark-data object audit watcher now works with sharded containers. Previously, it would think that all data files were absent from listings.
[KO] 다크데이터 오브젝트 Auditing 감지기 अब 공유 컨테이너와 함께 작동합니다. 이전에, 모든 데이터 파일이 목록에서.absent로 생각되었다.

[EN] The default for `object_post_as_copy` has been changed to False. The option is now deprecated and will be removed in a future release. If your cluster is still running with post-as-copy enabled, please update it to use the "fast-post" method. Future versions of Swift will not support post-as-copy, and future features will not be supported under post-as-copy. ("Fast-post" is where `object_post_as_copy` is false).
[KO] 클러스터의 기본값이 오브젝트 포스getAs 코피가 False로 변경되었습니다. 이 옵션은 더 이상 사용되지 않으며 향후 릴리스에서 제거될 예정입니다. 현재 포스-as-copy를 활성화된 클러스터가 여전히 작동 중이면, "fast-post" 메서드를 사용하도록 업데이트해 주세요. 향후 스위프트 버전은 포스-as-copy를 지원하지 않을 것이고, 향후 기능도 포스-as-copy에서만 지원되지 않을 것입니다. ("Fast-post"는 object_post_as_copy가 False인 경우입니다).

[EN] The default location is now set to "us-east-1". This is more likely to be the default region that a client will try when using v4 signatures.
[KO] 클라이언트의 기본 위치는 이제 "us-east-1"로 설정되었습니다. 이 것은 v4 서명과 함께 사용할 때 클라이언트가 사용하는 지역의 확률이 더 높은 지역입니다.

[EN] The erasure code reconstructor `handoffs_first` option has been deprecated in favor of `handoffs_only`. `handoffs_only` is far more useful, and just like `handoffs_first` mode in the replicator, it gives the operator the option of forcing the consistency engine to focus solely on revert (handoff) jobs, thus improving the speed of rebalances.  The `handoffs_only` behavior is somewhat consistent with the replicator's `handoffs_first` option (any error on any handoff in the replicator will make it essentially handoff only forever) but the `handoff_only` option does what you want and is named correctly in the reconstructor.
[KO] 기사별로 작업을 할 수 있는 새로운 기본값이 추가되었습니다.

[EN] The erasure code reconstructor will now shuffle work jobs across all disks instead of going disk-by-disk. This eliminates single-disk I/O contention and allows continued scaling as concurrency is increased.
[KO] 디스크는 이제 모든 디스크에서 작업을 섞어주기 시작하여 이전에는 디스크별로 작업을 섞었습니다. 이로 인해 단일 디스크 I/O-contention을 제거하고, 동시성이 증가할수록 계속적으로 확장할 수 있습니다.

[EN] The formpost digest algorithm is now configurable via the new ``allowed_digests`` option, and support is added for both SHA-256 and SHA-512. Supported formpost digests are exposed to clients in ``/info``. Additionally, formpost signatures can now be base64 encoded.
[KO] 클라이언트의 기본값이 추가되었습니다.

[EN] The message template for proxy logging may now include a ``{domain}`` field for the client-provided ``Host`` header.
[KO] 클라이언트가 제공하는 `Host` 헤더에 대한 정보를 포함할 수 있는 메시지 템플릿을 위한 프록시 로그िंг의 경우, `{domain}` 필드를 포함할 수 있습니다.

[EN] The object and container server config option ``slowdown`` has been deprecated in favor of the new ``objects_per_second`` and ``containers_per_second`` options.
[KO] 컨테이너와 오브젝트의 오브젝트/컨테이너당 초당 단위가 변경되었습니다.

[EN] The object server runs certain IO-intensive methods outside the main pthread for performance. Previously, if one of those methods tried to log, this can cause a crash that eventually leads to an object server with hundreds or thousands of greenthreads, all deadlocked. The fix is to use a mutex that works across different greenlets and different pthreads.
[KO] 오브젝트 서버가 certain IO-중점 메서드를 외부의 main pthread에서 실행하여 성능을 향상시키는 데 사용됩니다. 이전에, 이 중 하나의 메서드가 로그를 시도할 경우, 이것은 eventually object 서버와 hundreds 또는 thousands of greenthreads가 모두 deadlocked으로 이어질 수 있습니다. mutex가 다른 greenlet과 different pthreads에서 작동하는 것을 위해 사용하는 것이 fixing입니다.

[EN] The object updater now supports two configuration settings: "concurrency" and "updater_workers". The latter controls how many worker processes are spawned, while the former controls how many concurrent container updates are performed by each worker process. This should speed the processing of async_pendings.
[KO] 구성은 두 가지 설정을 지원합니다: "Concurrency"와 "Updater Workers". 후자는 작업 프로세스를 생성하는 수를 제어하고, 전자는 각 작업 프로세스가 동시적으로 컨테이너 업데이트를 수행하는 수를 control합니다. 이로써异기적 pending의 처리 속도를 빠르게 할 수 있습니다.

[EN] The object-replicator now logs successful rsync transfers at debug instead of info.
[KO] 오브젝트-리플리เค터는 이제 디버그 로그에 성공적인 rsync 이스턴스 트랜스퍼를 기록합니다.

[EN] The proxy-logging middleware now emits timing and transfer stats for more requests such as auth requests. These will be labeled ``UNKNOWN`` rather than ``account``, ``container``, etc.
[KO] 사용자 프로시지 로그 미들웨어는 이제 더 많은 요청, 예를 들어 인증 요청을 포함하여 타이밍 및 전달 통계를 보냅니다. 이들은 "Unknown" 라고 labeling이 아니라 "계정", "컨테이너", etc.와 같은 "계정", "컨테이너", etc.

[EN] The proxy-server now caches 'listing' shards, improving listing performance for sharded containers. A new config option, ``recheck_listing_shard_ranges``, controls the cache time and defaults to 10 minutes; set it to 0 to disable caching (the previous behavior).
[KO] 서버에서 캐시된 '리스트링' 공유가 추가되었습니다. 이로 인해 리스팅 성능이 개선되었습니다. 새로운 конф리그레이션 옵션, ``recheck_listing_shard_ranges``, 캐시 시간을 제어합니다. 기본적으로 10분으로 설정됩니다; 0으로 설정하면 캐싱을 비활성화할 수 있습니다( 이전 행동).

[EN] The relinker better handles tombstones found for the same object but with different inodes.
[KO] 노드를 사용하는 경우 노드가 필요합니다.

[EN] The staticweb middleware now allows empty listings at the root of a container. Previously, this would result in a 404 response.
[KO] 컨테이너의 루트에 비어 있는 목록을 허용하는 스테틱웹 미들웨어가 추가되었다. 이전에는 404 응답을 발생시켰다.

[EN] The structure of cached shard ranges has changed, improving performance when listing or writing to sharded containers. Note that immediately after upgrade, the new structures will all be cache misses, which may lead to a thundering herd problem. To avoid this, upgrade just a few nodes first, let them service some fraction of traffic to populate the cache, then upgrade the rest of the cluster.
[KO] 캐시가 변경되었습니다. 클러스터의 캐시 범위는 목록 또는 쓰기에 대한 성능을 개선합니다. 그러나 업그레이드 후 즉시, 모든 구조는 캐시 미스에 बदल되고, 이로 인해 대포성 군단 문제가 발생할 수 있습니다. 이러한 문제를 피하기 위해서, 일부 노드를 먼저 업그레이드하고, 그들이 일부 트래픽을 제공하여 캐시를 채우면, 나머지 클러스터를 모두 업그레이드합니다.

[EN] The tempurl digest algorithm is now configurable, and Swift added support for both SHA-256 and SHA-512. Supported tempurl digests are exposed to clients in ``/info``. Additionally, tempurl signatures can now be base64 encoded.
[KO] 클라이언트에 대해 새로운 기본값이 추가되었습니다.

[EN] The tempurl middleware has been updated to return a 503 if storing a token in memcache fails. Third party authentication middlewares are encouraged to also use the new ``raise_on_error`` keyword argument when storing ephemeral tokens in memcache.
[KO] 캐시가 업데이트되었습니다.

[EN] Turned off thread-logging when monkey-patching with eventlet. This addresses a potential hang in the proxy-server while logging client disconnects.
[KO] 클라이언트를 사용할 때는 **서버**가 작동하는 동안 클라이언트가 연결을 끊을 때 발생할 수 있는 오류를 해결하기 위해 이 기능이 turning off thread-logging when monkey-patching with eventlet.

[EN] Unsigned payloads work with v4 signatures once more.
[KO] 서명이 필요하지 않습니다. 비회원 패킷은 다시 v4 서명과 함께 작동합니다.

[EN] Upgrade Notes
[KO] 업그레이드 노트

[EN] Upgrade impact -- during a rolling upgrade, an updated proxy server may write a manifest that an out-of-date proxy server will not be able to read. This will resolve itself once the upgrade completes on all nodes.
[KO] 노드에서 업그레이드를 진행하는 경우, 업데이트된 프록시 서버가 로oling 업그레이드 중인 동안 manifest를 작성할 수 있습니다. 이로 인해 outdated proxy server는 upgrade 완료되기 전까지 manifest를 읽을 수 없습니다. 노드의 모든 경우에 upgrade가 완료되면 itself가 해결됩니다.

[EN] User metadata is now exposed via CORS when encryption is enabled, matching the behavior when encryption is not enabled.
[KO] 사용자 메타데이터는 암호화가 활성화된 경우 CORS를 통해 노출되고 암호화가 비활성화된 경우와 일치하는 행동을 보여준다.

[EN] Using an ``X-Remove-Account-Quota-Bytes-Policy-<policy name>`` header now removes the per-policy quota, rather than reducing it to zero.
[KO] `X-Remove-Account-Quota-Bytes-Policy-정책` 헤더를 사용하면 정책에 따라 квOTA를 제거한다, 대신에 0으로 줄여준다.

[EN] When building a listing from shards, any failure to retrieve listings will result in a 503 response. Previously, failures fetching a partiucular shard would result in a gap in listings.
[KO] 공유를 사용하여 목록을 만들 때, 목록을 가져오기에 대한 오류가 발생하면 503 응답이 발생합니다. 이전에는 특정 공유에서 목록을 가져오기 때문에 목록의 격자가 생깁니다.

[EN] When listing objects in a container in json format, static large objects (SLOs) will now include an additional new "slo_etag" key that matches the etag returned when requesting the SLO. The existing "hash" key remains unchanged as the MD5 of the SLO manifest. Text and XML listings are unaffected by this change.
[KO] JSON 형식으로 컨테이너에 objects를 listing 할 때, 정적 large objects (SLOs)에서 추가적인 새로운 "slo_etag" 키가 포함되었습니다. 이 키는 요청을 시도할 때 SLO의 Etag과 일치합니다. 존재하는 "hash" 키는 unchanged remains MD5 SLO manifest의 MD5입니다. 텍스트 및 XML listing은이 변경에 영향을 받지 않습니다.

[EN] When making backend requests, the ``proxy-server`` now ensures query parameters are always properly quoted. Previously, the proxy would encounter an error on Python 2.7.17 if the client included non-ASCII query parameters in object requests. This was previously fixed in 2.23.0.
[KO] 백엔드 요청을 사용할 때는 `proxy-server`가 항상 매개 변수를 올바르게 인용한다. 이전에, 프록시가 Python 2.7.17에서 클라이언트가 오브젝트 요청에 비문자 매개 변수를 포함하는 경우 오류를遇하게 되었다. 이 문제는 이전에 2.23.0 버전에서 해결되었다.

[EN] With heartbeating turned on, the proxy will start its response immediately with 202 Accepted then send a single whitespace character periodically until the request completes. At that point, a final summary chunk will be sent which includes a "Response Status" key indicating success or failure and (if successful) an "Etag" key indicating the Etag of the resulting SLO.
[KO]  heartbeating이 활성화되면, 프록시는 즉시 202 수락된 후 응답을 시작하고 한 개의 띄어쓰기 문자를 주기적으로 전송할 때까지 요청이 완료될 때까지 계속합니다. 그때까지. 성공 또는 실패를 나타내는 "Response Status" 키가 포함된 최종 요약 chunk를 전송합니다. 이 경우, 성공하면 SLO 결과의 Etag을 나타내는 "Etag" 키도 포함됩니다.

[EN] With heartbeating turned on, the proxy will start its response immediately with 202 Accepted then send a single whitespace character periodically until the request completes. At that point, a final summary chunk will be sent which includes a ``Response Status`` key indicating success or failure.
[KO] heartbeating이 활성화되면, 프록시가 즉시 202 수신된 후, 요청이 완료될 때까지 단일 whitespaces를 주기적으로 보낸다. 그때는, 'Response Status' 키가 포함된 최종 요약 chunk를 보낸다. 이 키는 성공 또는 실패를 나타냅니다.

[EN] ``LastModified`` timestamps in listings are now rounded up to whole seconds, like they are in responses from AWS.
[KO] ``LastModified`` 타임스탬프가 목록에서 अब整数 초로 반드시 올려진다.

[EN] ``fallocate_reserve`` may be specified as a percentage in more places.
[KO] `fallocate_reserve`는 일부 위치에서 백분율로指定될 수 있습니다.

[EN] ``s3token`` no longer mangles request paths that include the Access Key ID.
[KO] `s3token`는 더 이상 요청 경로에 액세스 키 ID를 포함하는 경우 경로를 манипulate하지 않습니다.

[EN] ``swift-container-info`` now summarizes shard range information. Pass ``-v``/``--verbose`` if you want to see all of them.
[KO] `` контей너 정보 ''은 공유 범위 정보를 요약합니다. `` -v '' 또는 `` --verbose '' 옵션을 사용하면 모든 것을 보려면?

[EN] ``swift-manage-shard-ranges`` can now accept a config file; this may be used to ensure consistency of threshold values with the container-sharder config.
[KO] ``컨테이너``에 대한 범위를 관리하는 ``swift-manage-shard-ranges`` 명령은 이제 конф리그 파일을 사용할 수 있습니다. 이 конф리그 파일은 ``container-sharder`` конф리그와 ``threshold`` 값의 일관성을 보장하기 위해 사용될 수 있습니다.

[EN] and you want to take advantage of faster updates, then do this::
[KO] 이러한 번역 규칙을 적용하려면 다음을 사용하세요::

[EN] cname_lookup middleware now accepts a ``nameservers`` config variable that, if defined, will be used for DNS lookups instead of the system default.
[KO] cname_lookup 미들웨어는 jetzt "nameservers" 구성 변수를 받습니다. 이 변수가 정의되면, DNS 검색을 시스템 기본보다 사용합니다.

[EN] domain_remap now accepts a list of domains in "storage_domain".
[KO] `domain_remap`는 이제 `storage_domain`의 목록을 받아서 `도메인`으로 번역합니다.

[EN] formpost can now accept a content-encoding parameter.
[KO] 포스트는 이제 매개변수 'content-encoding'을 수용할 수 있습니다.

[EN] s3api now mimics some forms of AWS server-side encryption based on whether Swift's at-rest encryption functionality is enabled. Note that S3 API users are now able to know more about how the cluster is configured than they were previously, ie knowledge of encryption at-rest functionality being enabled or not.
[KO] s3api 이제 클러스터의 구성에 대한 더 많은 정보를 제공할 수 있는 AWS 서버-side 암호화บาง 형태를 시뮬레이션합니다. note that s3 api 사용자는 이전에는 지속적 암호화 기능이 활성화된지 확인하는 것과 같은 information에 대해 더 많이 알 수 있습니다. ie 지속적 암호화 기능이 활성화된지 확인하는 것과 같은 information에 대해 더 많이 알 수 있습니다.

[EN] statsd error messages correspond to 5xx responses only. This makes monitoring more useful because actual errors (5xx) will not be hidden by common user requests (4xx). Previously, some 4xx responses would be included in timing information in the statsd error messages.
[KO] 사용자

[EN] 2023.1 Series Release Notes
[KO] 2023.1 시리즈 릴리스 노트

[EN] 2023.2 Series Release Notes
[KO] 2023.2 시리즈 릴리스 노트

[EN] 2024.1 Series Release Notes
[KO] 2024.1 시리즈 릴리스 노트

[EN] 2024.2 Series Release Notes
[KO] 2024.2 시리즈 릴리스 노트

[EN] 2025.1 Series Release Notes
[KO] 2025.1 시리즈 릴리스 노트

[EN] 2025.2 Series Release Notes
[KO] 2025.2 시리즈 릴리스 노트

[EN] Current (Unreleased) Release Notes
[KO] 현재 (미출시) 릴리스 노트

[EN] Swift Release Notes
[KO] 스위프트 릴리스 노트

[EN] Newton Series Release Notes
[KO] 뉴턴 시리즈 릴리스 노트

[EN] Ocata Series Release Notes
[KO] Ocata 시리즈 릴리스 노트

[EN] Pike Series Release Notes
[KO] PIke 시리즈 릴리스 노트

[EN] Queens Series Release Notes
[KO] 퀸즈 시리즈 릴리스 노트

[EN] Rocky Series Release Notes
[KO] 로키 시리즈 릴리스 노트

[EN] Stein Series Release Notes
[KO] Stein 시리즈 릴리스 노트

[EN] Train Series Release Notes
[KO] 트레인 시리즈 출시 노트

[EN] Ussuri Series Release Notes
[KO] Ussuri 시리즈 릴리스 노트

[EN] Victoria Series Release Notes
[KO] 비クト리아 시리즈 릴리스 노트

[EN] Wallaby Series Release Notes
[KO] Wallaby 시리즈 릴리스 노트

[EN] Xena Series Release Notes
[KO] Xena 시리즈 릴리스 노트

[EN] Yoga Series Release Notes
[KO] 요가 시리즈 릴리스 노트

[EN] Zed Series Release Notes
[KO] Zed 시리즈 릴리스 노트

